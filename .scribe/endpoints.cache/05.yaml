## Autogenerated by Scribe. DO NOT MODIFY.

name: ProductPicture
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{product_id}/pictures'
    metadata:
      groupName: ProductPicture
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'View all product pictures'
      description: 'Fetch and return all pictures for specific product.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: dolor
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/products/{product_id}/pictures'
    metadata:
      groupName: ProductPicture
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create product picture'
      description: 'Upload media and create input in media table.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: quae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      media:
        name: media
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      isPrimary:
        name: isPrimary
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      isPrimary: true
    fileParameters:
      media: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|XN3v5XbCA86njwOGg9gfNPySqwzjEeVcn8VF6WcW9984e446'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{product_id}/pictures/{id}'
    metadata:
      groupName: ProductPicture
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'View product picture'
      description: 'Fetch specific picture data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: culpa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the picture.'
        required: true
        example: dolore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: culpa
      id: dolore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"message":"Media file not found","status":404}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/products/{product_id}/pictures/{id}'
    metadata:
      groupName: ProductPicture
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update product picture'
      description: 'Update picture data, for now only change is_primary state.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the picture.'
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: qui
      id: earum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      isPrimary:
        name: isPrimary
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      isPrimary: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|XN3v5XbCA86njwOGg9gfNPySqwzjEeVcn8VF6WcW9984e446'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/products/{product_id}/pictures/{id}'
    metadata:
      groupName: ProductPicture
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete product picture'
      description: 'Delete media resource and remove file from server.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the picture.'
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: perferendis
      id: laudantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|XN3v5XbCA86njwOGg9gfNPySqwzjEeVcn8VF6WcW9984e446'
    controller: null
    method: null
    route: null
    custom: []
