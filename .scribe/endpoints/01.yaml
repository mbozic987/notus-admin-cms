name: User
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'View all users'
      description: 'Fetch and return all users, filters, sort and includes implemented.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":1,"attributes":{"name":"Casimer Quitzon","email":"albertha.schmeler@example.net","role":"admin","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/1"}},{"type":"user","id":2,"attributes":{"name":"Clementina Gottlieb I","email":"jermain42@example.com","role":"moderator","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/2"}},{"type":"user","id":3,"attributes":{"name":"Sim Kuvalis","email":"fsmith@example.com","role":"moderator","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/3"}},{"type":"user","id":4,"attributes":{"name":"Jared Cartwright","email":"turcotte.mayra@example.org","role":"user","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/4"}},{"type":"user","id":5,"attributes":{"name":"Kaitlin Bayer","email":"pcollins@example.net","role":"user","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/5"}},{"type":"user","id":6,"attributes":{"name":"Elinore Zemlak","email":"dicki.ben@example.com","role":"user","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/6"}},{"type":"user","id":7,"attributes":{"name":"Prof. Rick Hermiston","email":"vivien.connelly@example.net","role":"user","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/7"}},{"type":"user","id":8,"attributes":{"name":"Sydni Kautzer","email":"heathcote.fleta@example.net","role":"user","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/8"}},{"type":"user","id":9,"attributes":{"name":"Idella Gulgowski","email":"ivah.gislason@example.net","role":"user","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/9"}},{"type":"user","id":10,"attributes":{"name":"Dr. Jerrell Nicolas Sr.","email":"austyn97@example.net","role":"user","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/10"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/users?page=1","last":"http:\/\/localhost\/api\/v1\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/users","per_page":15,"to":10,"total":10}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|XN3v5XbCA86njwOGg9gfNPySqwzjEeVcn8VF6WcW9984e446'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create user'
      description: 'Create new user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: wflatley@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: F0$)p7-_7D)!_j
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: dolorem
      email: wflatley@example.net
      password: F0$)p7-_7D)!_j
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|XN3v5XbCA86njwOGg9gfNPySqwzjEeVcn8VF6WcW9984e446'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'View user'
      description: 'Fetch specific user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":1,"attributes":{"name":"Casimer Quitzon","email":"albertha.schmeler@example.net","role":"admin","createdAt":"2024-05-08T18:28:18.000000Z","updatedAt":"2024-05-08T18:28:18.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/users\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|XN3v5XbCA86njwOGg9gfNPySqwzjEeVcn8VF6WcW9984e446'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user'
      description: 'Update specific user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: occaecati
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: false
        example: "Y'?3yz!rs|j28!"
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role:
        name: role
        description: ''
        required: false
        example: admin
        type: string
        enumValues:
          - admin
          - moderator
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: occaecati
      password: "Y'?3yz!rs|j28!"
      role: admin
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|XN3v5XbCA86njwOGg9gfNPySqwzjEeVcn8VF6WcW9984e446'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete user'
      description: 'Delete specific user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|XN3v5XbCA86njwOGg9gfNPySqwzjEeVcn8VF6WcW9984e446'
    controller: null
    method: null
    route: null
    custom: []
